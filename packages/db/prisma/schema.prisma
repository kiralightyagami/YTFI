// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  googleId      String   @unique
  email         String   @unique
  name          String?
  avatarUrl     String?
  walletAddress String   @unique
  channels      Channel[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Channel {
  id            String   @id @default(cuid())
  youtubeId     String   @unique
  name          String
  symbol        String   @unique
  tokenAddress  String   @unique
  creator       User     @relation(fields: [creatorId], references: [id])
  creatorId     String

  royalties     Royalty[]
  trades        Trade[]

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Royalty {
  id        String   @id @default(cuid())
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId String
  amount    Decimal  @db.Decimal(18, 8)
  claimed   Boolean  @default(false)

  createdAt DateTime @default(now())
}

model Trade {
  id        String   @id @default(cuid())
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId String
  buyer     String   // wallet address
  seller    String   // wallet address
  amount    Decimal  @db.Decimal(18, 8)
  timestamp DateTime @default(now())
}
